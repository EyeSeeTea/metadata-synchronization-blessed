language: node_js
node_js:
    - 12.13.0
dist: bionic
cache:
    directories:
        - "$HOME/.cache"
env:
    - PORT=8081 REACT_APP_DHIS2_BASE_URL=http://localhost:8080 REACT_APP_CYPRESS=true CYPRESS_EXTERNAL_API=http://localhost:8080 CYPRESS_ROOT_URL=http://localhost:8081 FEEDBACK_REPO=EyeSeeTea/feedback-ci
before_install:
    - echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
    # Install python dependencies
    - sudo apt-get update
    - sudo apt-get install docker.io docker-compose python3 python3-setuptools httpie
    #  Install d2-docker
    - git clone https://github.com/EyeSeeTea/d2-docker.git
    - cd d2-docker/
    - sudo python3 setup.py install
    - cd ../
    # Hack to not be prompted in the terminal
    - sudo apt-get remove golang-docker-credential-helpers
    # Start docker service
    - sudo systemctl unmask docker.service
    - sudo systemctl unmask docker.socket
    - sudo systemctl start docker.service
    # Login to docker and start DHIS2 instance
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - d2-docker start eyeseetea/dhis2-data:2.30-datasync-sender -d
install:
    - git clone --single-branch --branch gh-pages "https://${GITHUB_USERNAME}:${GITHUB_PASSWORD}@github.com/${FEEDBACK_REPO}" feedback-ci
    - yarn install --frozen-lockfile
    - yarn cy:verify
    - yarn test
    - yarn start &
script:
    - yarn wait-on http-get://localhost:8080
    - yarn wait-on http-get://localhost:8081
    - yarn migrate "http://$CYPRESS_DHIS2_AUTH@localhost:8080"
    - CYPRESS_E2E=true yarn node cypress/support/runner.js -b chrome
after_script:
    - cd feedback-ci/
    - if [[ $TRAVIS_PULL_REQUEST_BRANCH != "" ]]; then BRANCH="${TRAVIS_PULL_REQUEST_BRANCH}"; else BRANCH="${TRAVIS_BRANCH}"; fi;
    - GITHUB_PAGES_ROOT=$(http -a ${GITHUB_USERNAME}:${GITHUB_PASSWORD} https://api.github.com/repos/${FEEDBACK_REPO}/pages | jq ".html_url" | tr -d '"')
    - GITHUB_PAGES_PATH=$(cat ../pages_path)
    - git add . && git commit -m "Results for $TRAVIS_EVENT_TYPE on $TRAVIS_COMMIT"
    - git pull origin --no-edit
    - git push origin gh-pages
    - EXISTING_COMMENT=$(http -a ${GITHUB_USERNAME}:${GITHUB_PASSWORD} https://api.github.com/repos/${TRAVIS_REPO_SLUG}/issues/${TRAVIS_PULL_REQUEST}/comments | jq '[.[] | select(.user.login == "EyeSeeTeaBotTest")][0].id')
    - if [[ $TRAVIS_TEST_RESULT == 0 ]]; then GITHUB_COMMENT_TITLE="Tests ran successfully :tada:"; else GITHUB_COMMENT_TITLE="Tests failed with errors :rotating_light:"; fi;
    - GITHUB_COMMENT_MESSAGE="<h3>${GITHUB_COMMENT_TITLE}</h3><br />Build commit ${TRAVIS_COMMIT_MESSAGE} with commit id ${TRAVIS_COMMIT} on branch ${BRANCH}<br /><br />Travis log available at <a href="${TRAVIS_BUILD_WEB_URL}" target="_blank">builds/${TRAVIS_BUILD_ID}</a><br /><br />See cypress results at <a href="${GITHUB_PAGES_ROOT}${GITHUB_PAGES_PATH}" target="_blank">feedback-ci/${GITHUB_PAGES_PATH}</a>"
    - if [[ $TRAVIS_PULL_REQUEST != "false" && $EXISTING_COMMENT == "null" ]]; then http -a ${GITHUB_USERNAME}:${GITHUB_PASSWORD} POST https://api.github.com/repos/${TRAVIS_REPO_SLUG}/issues/${TRAVIS_PULL_REQUEST}/comments body="${GITHUB_COMMENT_MESSAGE}"; fi;
    - if [[ $TRAVIS_PULL_REQUEST != "false" && $EXISTING_COMMENT != "null" ]]; then http -a ${GITHUB_USERNAME}:${GITHUB_PASSWORD} PATCH https://api.github.com/repos/${TRAVIS_REPO_SLUG}/issues/comments/${EXISTING_COMMENT} body="${GITHUB_COMMENT_MESSAGE}"; fi;
    - kill $(jobs -p) || true
addons:
    apt:
        packages:
            - libgconf-2-4
notifications:
    slack:
        secure: R/tguoSgiUOK5qYmRoSv4qVkgGaF26PVnjqefXGc8oMc4scbssjbhQt+qVC2RuhB3ErXmez+BfaKcLLR6cEFY4cm+puBD+mU6fP2rDCiQRnmfaZmvdT/MY1KTSKlT2JzQ/YU9IQfdUetr/7lUbdyTcJQ8r+QOMwQu/drSGUEOt+eTHO5HQFVfhHnmoYWJ4oWxAWUyJx7DbXgRy9K5JlYlv2Vesol5vpSzjdXNlcXV3EPOD009ODO2+EboKujZHvLJakAjy/sCgtqB0ys22WXPv5dOj8FCJRjFSKpe9s5pZYjvjJfjD7GnIcP6/AAe+m3OC9/fDxdFtXeppJ95FNEQKyWCVAS9QNY50G4W0sHlR6VZ3OUhLnIQLKeNncTWG5QaUc4+/vYmbeEYFahOATMUX8I4uUVuT+5jDS883kHQ6Z8XxUWy3PztuM3kOz/cv3zppd2icpPtqDTkIql5CdA4ZHmBElD3GiIJgEfUOaUqn4isivALv024UnQhwrHCK55ymcphotzjdnhRQSlY2MeywA+TqaAtcYwoqKOBbvHQ2c8QMfanbT9UvmAE7+X0VruF5hgvaKA5DgT51RZl8YQVuLBbrfcT8+XrTypl2fwpJ4/23wltR/Ex9K7wJtjQeM1oz37mzFUW7zfvlHsXgWy2WtTkM/icAlxLM7ZN5YGMxI=
